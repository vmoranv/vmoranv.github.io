[{"title":"使用 Hexo + GitHub Pages + Stellar 主题搭建个人博客","path":"/2025/05/05/建站/","content":"引言本文将详细介绍如何使用 Hexo 静态网站生成器，结合 GitHub Pages 服务，并应用精美的 Stellar 主题，从零开始搭建一个属于您自己的个人博客。 Hexo 以其超快的生成速度、对 Markdown 的良好支持以及便捷的一键部署功能而闻名，非常适合用来构建个人博客。GitHub Pages 则提供了免费、稳定、可靠的静态网站托管服务。Stellar 主题则能让您的博客拥有现代化且高度可定制的外观。 参考资料： 超详细Hexo+Github Pages搭建个人博客教程 - CSDN博客 Hexo 官方中文文档 一、前置准备在开始搭建之前，请确保您的系统已安装以下软件： Git: 用于代码的版本控制和部署。 下载地址：https://git-scm.com/downloads 安装后，建议配置 Git 的用户信息：12git config --global user.name &quot;您的GitHub用户名&quot;git config --global user.email &quot;您的GitHub邮箱&quot; 参考：使用git拉取github项目-CSDN博客 Node.js 和 npm: Hexo 基于 Node.js，npm 是其包管理器。 下载地址：Node.js — Download Node.js® 安装 Node.js 会同时安装 npm。 GitHub 账号: 用于创建 GitHub Pages 仓库。 注册地址：https://github.com/ 安装完成后，可以在命令行中输入以下命令检查是否安装成功： 123node -vnpm -vgit --version 如果能正确显示版本号，则说明安装成功。 二、搭建本地 Hexo 博客 选择一个目录 用于存放您的博客文件，建议路径中不包含中文和特殊字符。例如 C:\\MyBlog。 打开命令行工具 (如 Git Bash, Windows Terminal 等)，进入您选择的目录。 安装 Hexo CLI (命令行工具)：1npm install -g hexo-cli 这将把 Hexo 命令安装到全局环境中，方便在任何地方使用 hexo 命令。 初始化 Hexo 项目: 在您选择的目录下执行以下命令，myblogs 是您的博客项目文件夹名称，可以自定义。12hexo init myblogscd myblogs 这会在 myblogs 文件夹中创建一个新的 Hexo 项目，并自动安装所需的依赖。 安装项目依赖: 确保您在项目文件夹 (myblogs) 中执行此命令。1npm install 执行完毕后，您的项目文件夹结构大致如下：12345678.├── _config.yml # 站点配置文件├── package.json├── scaffolds # 模板文件夹├── source # 博客文章和其他源文件存放处| ├── _drafts| └── _posts└── themes # 主题文件夹 本地预览: 在项目文件夹中执行以下命令，启动本地服务器预览博客。1hexo server 默认情况下，博客将在 http://localhost:4000 运行。打开浏览器访问该地址，您应该能看到 Hexo 默认主题的博客页面。 三、创建 GitHub Pages 仓库 登录 GitHub，创建一个新的仓库 (New repository)。 仓库命名规范: 仓库名称必须是 您的GitHub用户名.github.io 的格式。例如，如果您的 GitHub 用户名是 vmoranv，则仓库名称应为 vmoranv.github.io。 选择 Public (公开) 仓库。 勾选 Add a README file (可选，但建议勾选)。 点击 Create repository 创建仓库。 配置 GitHub Pages: 创建仓库后，进入仓库的 Settings -&gt; Pages。 在 Source 部分，选择您希望作为 GitHub Pages 来源的分支 (通常是 main 或 master)。 点击 Save。 稍等片刻，GitHub Pages 会为您生成一个网站，访问地址通常是 https://您的GitHub用户名.github.io。此时访问该地址，您可能只能看到 README 文件的内容或一个简单的页面。 四、配置 Hexo 部署到 GitHub Pages 安装 Git 部署插件: 在您的 Hexo 项目文件夹 (myblogs) 中执行以下命令： 1npm install hexo-deployer-git --save 这个插件允许 Hexo 通过 Git 将生成的静态文件部署到远程仓库。 修改站点配置文件: 打开 Hexo 项目根目录下的 _config.yml 文件。 找到 deploy 部分 (通常在文件末尾)，修改或添加以下配置： 123456# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repo: git@github.com:您的GitHub用户名/您的GitHub用户名.github.io.git # 使用 SSH 地址 branch: main # 替换为您GitHub Pages配置的分支，通常是 main 或 master 将 您的GitHub用户名 替换为您的实际 GitHub 用户名。 repo 建议使用 SSH 地址 (git@github.com:...)，这需要您配置 SSH Key。如果您不熟悉 SSH Key，也可以使用 HTTPS 地址 (https://github.com/您的GitHub用户名/您的GitHub用户名.github.io.git)，部署时可能需要输入 GitHub 账号密码。 branch 确保与您在 GitHub Pages 设置中选择的分支一致。 参考：超详细Hexo+Github Pages搭建个人博客教程 - CSDN博客 中关于 _config.yml 配置和部署报错的解决方案。 部署博客: 在 Hexo 项目文件夹中依次执行以下命令： 123hexo clean # 清理 Hexo 缓存和已生成的静态文件hexo generate # 重新生成静态文件到 public 文件夹hexo deploy # 将 public 文件夹的内容部署到 GitHub Pages 仓库 如果使用 SSH 地址部署，可能会提示输入 SSH Key 密码。如果部署成功，命令行会显示 Deploy done。稍等片刻（可能需要几分钟），访问您的 GitHub Pages 地址 https://您的GitHub用户名.github.io，您应该能看到部署成功的博客页面。 五、应用 Stellar 主题 下载 Stellar 主题: 在 Hexo 项目文件夹中执行以下命令，将 Stellar 主题克隆到 themes 文件夹：1git clone -b main https://github.com/xaoxuu/hexo-theme-stellar.git themes/stellar 修改站点配置文件: 打开 Hexo 项目根目录下的 _config.yml 文件。 找到 theme 配置项，将其值修改为 stellar：12# Themestheme: stellar 配置 Stellar 主题: Stellar 主题有自己的配置文件，位于 themes/stellar/_config.yml。您可以复制此文件到 Hexo 项目根目录下，并重命名为 _config.stellar.yml 进行修改。Hexo 会优先读取项目根目录下的主题配置文件。12# 在项目根目录执行cp themes/stellar/_config.yml _config.stellar.yml 然后修改项目根目录下的 _config.stellar.yml 文件来配置主题的各种选项，例如导航菜单、侧边栏、社交链接等。详细的配置方法请参考 Stellar 主题的开发者文档：https://xaoxuu.com/wiki/stellar/ 重新生成和部署: 修改配置后，需要重新生成静态文件并部署才能看到效果：123hexo cleanhexo generatehexo deploy 六、基本使用：撰写新文章 创建新文章: 在 Hexo 项目文件夹中执行以下命令：1hexo new &quot;您的文章标题&quot; 这会在 source/_posts 文件夹下创建一个名为 您的文章标题.md 的 Markdown 文件。 编辑文章: 打开新创建的 Markdown 文件，您会看到文件顶部有一个 Front-matter 区块，由 --- 包围。您可以在这里配置文章的标题、日期、标签、分类等信息。12345678910111213141516171819202122232425---title: 您的文章标题date: 2023-10-27 10:00:00 # 文章创建日期和时间tags: # 文章标签，多个标签用逗号或换行分隔 - 标签1 - 标签2categories: # 文章分类，可以有多级分类 - 分类1 - 子分类keywords: # 文章关键词 - 关键词1 - 关键词2description: # 文章摘要，用于首页或列表页展示cover: # 文章封面图片链接---# 这里开始是文章正文，使用 Markdown 语法编写这是一段示例文字。## 二级标题- 列表项1- 列表项2 参考：超详细Hexo+Github Pages搭建个人博客教程 - CSDN博客 中关于 Front-matter 的说明。 生成和部署: 文章撰写完成后，执行以下命令生成静态文件并部署到 GitHub Pages：123hexo cleanhexo generatehexo deploy 七、总结通过以上步骤，您已经成功搭建了一个基于 Hexo + GitHub Pages 并使用 Stellar 主题的个人博客。您可以继续探索 Hexo 和 Stellar 主题的更多功能，例如添加评论系统、统计功能、自定义域名等，让您的博客更加完善。","tags":["Hexo","GitHub Pages","Stellar","建站"],"categories":["建站教程"]},{"title":"Hello World","path":"/2025/05/05/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]